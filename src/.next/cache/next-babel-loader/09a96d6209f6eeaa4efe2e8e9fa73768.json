{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useState, Fragment } from 'react';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport PropTypes from 'prop-types';\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\nimport QueryBuilderOutlinedIcon from '@material-ui/icons/QueryBuilderOutlined';\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport PhoneEnabledOutlinedIcon from '@material-ui/icons/PhoneEnabledOutlined';\nimport ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\nimport EmailOutlinedIcon from '@material-ui/icons/EmailOutlined';\nimport { Grid } from '@material-ui/core';\nexport default function CardDetails(props) {\n  var classes = props.classes,\n      title = props.title,\n      location = props.location,\n      description = props.description,\n      type = props.type,\n      contact = props.contact,\n      requirements = props.requirements,\n      company = props.company,\n      responsibilities = props.responsibilities,\n      benefit = props.benefit,\n      nationality = props.nationality,\n      views = props.views;\n\n  var _useState = useState(false),\n      expanded = _useState[0],\n      setExpanded = _useState[1];\n\n  var handleExpandClick = function handleExpandClick() {\n    setExpanded(!expanded);\n  };\n\n  return __jsx(Card, {\n    className: classes.root\n  }, __jsx(CardHeader, {\n    avatar: __jsx(Avatar, {\n      \"aria-label\": \"logo\",\n      className: classes.avatar\n    }, \"A\"),\n    action: __jsx(Fragment, null, __jsx(Typography, {\n      variant: \"body2\",\n      className: classes.display\n    }, __jsx(QueryBuilderOutlinedIcon, {\n      className: classes.icon\n    }), type), __jsx(Typography, {\n      variant: \"body2\",\n      className: classes.display\n    }, __jsx(VisibilityOutlinedIcon, {\n      className: classes.icon\n    }), views)),\n    title: __jsx(Fragment, null, __jsx(Typography, {\n      variant: \"h5\"\n    }, title), __jsx(Typography, {\n      variant: \"body1\"\n    }, company)),\n    subheader: __jsx(Typography, {\n      className: classes.display,\n      variant: \"body2\"\n    }, __jsx(LocationOnOutlinedIcon, {\n      className: classes.icon\n    }), location)\n  }), __jsx(CardContent, null, __jsx(Typography, {\n    variant: \"body2\"\n  }, description), __jsx(Typography, {\n    className: classes.list,\n    variant: \"body2\"\n  }, \"Language:\", __jsx(\"ul\", null, requirements.language.map(function (item, id) {\n    return __jsx(\"li\", {\n      key: id\n    }, item);\n  }))), __jsx(Typography, {\n    variant: \"body2\"\n  }, \"Requirements:\", __jsx(\"ul\", null, requirements.items.map(function (item, id) {\n    return __jsx(\"li\", {\n      key: id\n    }, item);\n  }))), __jsx(Typography, {\n    variant: \"body2\"\n  }, \"Nationality: \", nationality)), __jsx(Grid, {\n    className: classes.collapse\n  }, __jsx(CardActions, {\n    disableSpacing: true\n  }, __jsx(Typography, null, \"Open for details\", __jsx(IconButton, {\n    className: clsx(classes.expand, _defineProperty({}, classes.expandOpen, expanded)),\n    onClick: handleExpandClick,\n    \"aria-expanded\": expanded,\n    \"aria-label\": \"show more\"\n  }, __jsx(ExpandMoreIcon, null)))), __jsx(Collapse, {\n    \"in\": expanded,\n    timeout: \"auto\",\n    unmountOnExit: true\n  }, __jsx(CardContent, null, __jsx(Typography, {\n    className: classes.text,\n    variant: \"body2\"\n  }, \"Responsibilities\"), __jsx(\"ul\", null, responsibilities.map(function (item, id) {\n    return __jsx(\"li\", {\n      key: id\n    }, item);\n  }))), __jsx(CardContent, null, __jsx(Typography, {\n    className: classes.text,\n    variant: \"body2\"\n  }, \"Benefit\"), __jsx(\"ul\", null, benefit.map(function (item, id) {\n    return __jsx(\"li\", {\n      key: id\n    }, item);\n  })))), __jsx(CardContent, {\n    className: classes.contact\n  }, __jsx(Typography, {\n    className: classes.display,\n    variant: \"body2\"\n  }, __jsx(PhoneEnabledOutlinedIcon, {\n    className: classes.icon\n  }), ' ', contact.phone), __jsx(Typography, {\n    className: classes.display,\n    variant: \"body2\"\n  }, __jsx(ChatOutlinedIcon, {\n    className: classes.icon\n  }), \" \", contact.whatsapp), __jsx(Typography, {\n    className: classes.display,\n    variant: \"body2\"\n  }, __jsx(EmailOutlinedIcon, {\n    className: classes.icon\n  }), \" \", contact.email))));\n}\nCardDetails.defaultProps = {\n  title: 'Text',\n  company: 'Text',\n  location: 'Text',\n  type: 'Text',\n  description: 'Text',\n  language: ['Text', 'Text'],\n  items: ['Text', 'Text', 'Text', 'Text', 'Text', 'Text'],\n  responsibilities: ['Text', 'Text', 'Text', 'Text'],\n  benefit: ['Text', 'Text', 'Text', 'Text', 'Text', 'Text', 'Text', 'Text', 'Text'],\n  nationality: 'Text',\n  views: 0,\n  contact: {\n    phone: '',\n    whatsapp: '',\n    email: ''\n  },\n  requirements: {\n    language: ['Text', 'Text'],\n    items: ['Text', 'Text']\n  }\n};\nCardDetails.propTypes = {\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string,\n  company: PropTypes.string,\n  type: PropTypes.string,\n  location: PropTypes.string,\n  description: PropTypes.string,\n  language: PropTypes.arrayOf(PropTypes.string),\n  items: PropTypes.arrayOf(PropTypes.string),\n  responsibilities: PropTypes.arrayOf(PropTypes.string),\n  benefit: PropTypes.arrayOf(PropTypes.string),\n  nationality: PropTypes.string,\n  views: PropTypes.number,\n  contact: PropTypes.shape({\n    phone: PropTypes.string,\n    whatsapp: PropTypes.string,\n    email: PropTypes.string\n  }),\n  requirements: PropTypes.shape({\n    language: PropTypes.arrayOf(PropTypes.string),\n    items: PropTypes.arrayOf(PropTypes.string)\n  })\n};","map":{"version":3,"sources":["/Users/krinawibisana/Documents/ajobthing-test/src/components/elements/CardDetails/component.js"],"names":["React","useState","Fragment","clsx","Card","CardHeader","CardContent","CardActions","Collapse","Avatar","IconButton","Typography","ExpandMoreIcon","PropTypes","LocationOnOutlinedIcon","QueryBuilderOutlinedIcon","VisibilityOutlinedIcon","PhoneEnabledOutlinedIcon","ChatOutlinedIcon","EmailOutlinedIcon","Grid","CardDetails","props","classes","title","location","description","type","contact","requirements","company","responsibilities","benefit","nationality","views","expanded","setExpanded","handleExpandClick","root","avatar","display","icon","list","language","map","item","id","items","collapse","expand","expandOpen","text","phone","whatsapp","email","defaultProps","propTypes","object","isRequired","string","arrayOf","number","shape"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport PropTypes from 'prop-types';\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\nimport QueryBuilderOutlinedIcon from '@material-ui/icons/QueryBuilderOutlined';\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport PhoneEnabledOutlinedIcon from '@material-ui/icons/PhoneEnabledOutlined';\nimport ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\nimport EmailOutlinedIcon from '@material-ui/icons/EmailOutlined';\nimport { Grid } from '@material-ui/core';\n\nexport default function CardDetails(props) {\n  const {\n    classes,\n    title,\n    location,\n    description,\n    type,\n    contact,\n    requirements,\n    company,\n    responsibilities,\n    benefit,\n    nationality,\n    views,\n  } = props;\n  const [expanded, setExpanded] = useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"logo\" className={classes.avatar}>\n            A\n          </Avatar>\n        }\n        action={\n          <Fragment>\n            <Typography variant=\"body2\" className={classes.display}>\n              <QueryBuilderOutlinedIcon className={classes.icon} />\n              {type}\n            </Typography>\n            <Typography variant=\"body2\" className={classes.display}>\n              <VisibilityOutlinedIcon className={classes.icon} />\n              {views}\n            </Typography>\n          </Fragment>\n        }\n        title={\n          <Fragment>\n            <Typography variant=\"h5\">{title}</Typography>\n            <Typography variant=\"body1\">{company}</Typography>\n          </Fragment>\n        }\n        subheader={\n          <Typography className={classes.display} variant=\"body2\">\n            <LocationOnOutlinedIcon className={classes.icon} />\n            {location}\n          </Typography>\n        }\n      />\n      <CardContent>\n        <Typography variant=\"body2\">{description}</Typography>\n        <Typography className={classes.list} variant=\"body2\">\n          Language:\n          <ul>\n            {requirements.language.map((item, id) => {\n              return <li key={id}>{item}</li>;\n            })}\n          </ul>\n        </Typography>\n        <Typography variant=\"body2\">\n          Requirements:\n          <ul>\n            {requirements.items.map((item, id) => {\n              return <li key={id}>{item}</li>;\n            })}\n          </ul>\n        </Typography>\n        <Typography variant=\"body2\">Nationality: {nationality}</Typography>\n      </CardContent>\n      <Grid className={classes.collapse}>\n        <CardActions disableSpacing>\n          <Typography>\n            Open for details\n            <IconButton\n              className={clsx(classes.expand, {\n                [classes.expandOpen]: expanded,\n              })}\n              onClick={handleExpandClick}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n            >\n              <ExpandMoreIcon />\n            </IconButton>\n          </Typography>\n        </CardActions>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Typography className={classes.text} variant=\"body2\">\n              Responsibilities\n            </Typography>\n            <ul>\n              {responsibilities.map((item, id) => {\n                return <li key={id}>{item}</li>;\n              })}\n            </ul>\n          </CardContent>\n          <CardContent>\n            <Typography className={classes.text} variant=\"body2\">\n              Benefit\n            </Typography>\n            <ul>\n              {benefit.map((item, id) => {\n                return <li key={id}>{item}</li>;\n              })}\n            </ul>\n          </CardContent>\n        </Collapse>\n        <CardContent className={classes.contact}>\n          <Typography className={classes.display} variant=\"body2\">\n            <PhoneEnabledOutlinedIcon className={classes.icon} />{' '}\n            {contact.phone}\n          </Typography>\n          <Typography className={classes.display} variant=\"body2\">\n            <ChatOutlinedIcon className={classes.icon} /> {contact.whatsapp}\n          </Typography>\n          <Typography className={classes.display} variant=\"body2\">\n            <EmailOutlinedIcon className={classes.icon} /> {contact.email}\n          </Typography>\n        </CardContent>\n      </Grid>\n    </Card>\n  );\n}\n\nCardDetails.defaultProps = {\n  title: 'Text',\n  company: 'Text',\n  location: 'Text',\n  type: 'Text',\n  description: 'Text',\n  language: ['Text', 'Text'],\n  items: ['Text', 'Text', 'Text', 'Text', 'Text', 'Text'],\n  responsibilities: ['Text', 'Text', 'Text', 'Text'],\n  benefit: [\n    'Text',\n    'Text',\n    'Text',\n    'Text',\n    'Text',\n    'Text',\n    'Text',\n    'Text',\n    'Text',\n  ],\n  nationality: 'Text',\n  views: 0,\n  contact: {\n    phone: '',\n    whatsapp: '',\n    email: '',\n  },\n  requirements: {\n    language: ['Text', 'Text'],\n    items: ['Text', 'Text'],\n  },\n};\n\nCardDetails.propTypes = {\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string,\n  company: PropTypes.string,\n  type: PropTypes.string,\n  location: PropTypes.string,\n  description: PropTypes.string,\n  language: PropTypes.arrayOf(PropTypes.string),\n  items: PropTypes.arrayOf(PropTypes.string),\n  responsibilities: PropTypes.arrayOf(PropTypes.string),\n  benefit: PropTypes.arrayOf(PropTypes.string),\n  nationality: PropTypes.string,\n  views: PropTypes.number,\n  contact: PropTypes.shape({\n    phone: PropTypes.string,\n    whatsapp: PropTypes.string,\n    email: PropTypes.string,\n  }),\n  requirements: PropTypes.shape({\n    language: PropTypes.arrayOf(PropTypes.string),\n    items: PropTypes.arrayOf(PropTypes.string),\n  }),\n};\n"]},"metadata":{},"sourceType":"module"}