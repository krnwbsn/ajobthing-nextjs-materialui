{"ast":null,"code":"import _Set from \"@babel/runtime-corejs2/core-js/set\";\nimport _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport CardProduct from '../../elements/CardProduct';\nimport { Grid, Typography } from '@material-ui/core';\nimport AppBar from '../../elements/AppBar';\nimport images from '../../../configs/images';\nimport Footer from '../../elements/Footer';\nimport { getData, deleteData } from './actions';\nimport Router from 'next/router';\nexport default function Home(props) {\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: search,\n    1: setSearch\n  } = useState('');\n  console.log(getData());\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    const data = await getData();\n\n    const newData = _Array$from(new _Set(data.map(i => i.id))).filter(i => i).map(i => data.find(item => item.id === i));\n\n    setData(newData);\n  };\n\n  const handleSearch = event => {\n    setSearch(event.target.value);\n  };\n\n  const dataFiltered = data.filter(item => {\n    const title = `${item.title}`;\n\n    if (title.toLowerCase().includes(search.toLowerCase())) {\n      return item;\n    }\n  });\n\n  const handleLink = id => {\n    Router.push('/jobdetails/[id]', `/jobdetails/${id}`);\n  };\n\n  const handleClickAdd = () => {\n    Router.push('/add');\n  };\n\n  const handleDelete = async id => {\n    await deleteData(id);\n  };\n\n  const {\n    classes\n  } = props;\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"div\", {\n    className: classes.bar\n  }, __jsx(\"div\", null, __jsx(AppBar, {\n    handleClickAdd: handleClickAdd,\n    setData: setData,\n    data: data,\n    handleChange: handleSearch\n  })), __jsx(\"div\", null, __jsx(\"img\", {\n    className: classes.banner,\n    src: images.banner\n  })), __jsx(Typography, {\n    className: classes.jobListBox,\n    variant: \"h5\",\n    component: \"h5\"\n  }, \"All Jobs\"), __jsx(Grid, {\n    container: true,\n    justify: \"center\"\n  }, dataFiltered.map(item => {\n    return __jsx(CardProduct, {\n      key: item.id,\n      title: item.title,\n      description: item.description,\n      location: item.location,\n      company: item.company,\n      handleClick: () => handleLink(item.id),\n      handleDelete: () => handleDelete(item.id)\n    });\n  })), __jsx(Footer, null)));\n}\nHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/krinawibisana/Documents/ajobthing-test/src/components/pages/Home/component.js"],"names":["React","useState","useEffect","PropTypes","CardProduct","Grid","Typography","AppBar","images","Footer","getData","deleteData","Router","Home","props","data","setData","search","setSearch","console","log","loadData","newData","map","i","id","filter","find","item","handleSearch","event","target","value","dataFiltered","title","toLowerCase","includes","handleLink","push","handleClickAdd","handleDelete","classes","root","bar","banner","jobListBox","description","location","company","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport CardProduct from '../../elements/CardProduct';\nimport { Grid, Typography } from '@material-ui/core';\nimport AppBar from '../../elements/AppBar';\nimport images from '../../../configs/images';\nimport Footer from '../../elements/Footer';\nimport { getData, deleteData } from './actions';\nimport Router from 'next/router';\n\nexport default function Home(props) {\n  const [data, setData] = useState([]);\n  const [search, setSearch] = useState('');\n  console.log(getData());\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    const data = await getData();\n\n    const newData = Array.from(new Set(data.map((i) => i.id)))\n      .filter((i) => i)\n      .map((i) => data.find((item) => item.id === i));\n\n    setData(newData);\n  };\n\n  const handleSearch = (event) => {\n    setSearch(event.target.value);\n  };\n\n  const dataFiltered = data.filter((item) => {\n    const title = `${item.title}`;\n    if (title.toLowerCase().includes(search.toLowerCase())) {\n      return item;\n    }\n  });\n\n  const handleLink = (id) => {\n    Router.push('/jobdetails/[id]', `/jobdetails/${id}`);\n  };\n\n  const handleClickAdd = () => {\n    Router.push('/add');\n  };\n\n  const handleDelete = async (id) => {\n    await deleteData(id);\n  };\n\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.bar}>\n        <div>\n          <AppBar\n            handleClickAdd={handleClickAdd}\n            setData={setData}\n            data={data}\n            handleChange={handleSearch}\n          />\n        </div>\n        <div>\n          <img className={classes.banner} src={images.banner} />\n        </div>\n        <Typography className={classes.jobListBox} variant=\"h5\" component=\"h5\">\n          All Jobs\n        </Typography>\n        <Grid container justify=\"center\">\n          {dataFiltered.map((item) => {\n            return (\n              <CardProduct\n                key={item.id}\n                title={item.title}\n                description={item.description}\n                location={item.location}\n                company={item.company}\n                handleClick={() => handleLink(item.id)}\n                handleDelete={() => handleDelete(item.id)}\n              />\n            );\n          })}\n        </Grid>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}