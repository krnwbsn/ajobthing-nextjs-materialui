{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Set from \"@babel/runtime-corejs2/core-js/set\";\nimport _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport CardProduct from '../../elements/CardProduct';\nimport { Grid, Typography } from '@material-ui/core';\nimport AppBar from '../../elements/AppBar';\nimport images from '../../../configs/images';\nimport Footer from '../../elements/Footer';\nimport { getData, deleteData } from './actions';\nimport Router from 'next/router';\nexport default function Home(props) {\n  var _useState = useState([]),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(''),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  console.log(getData());\n  useEffect(function () {\n    loadData();\n  }, []);\n\n  var loadData =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var data, newData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getData();\n\n            case 2:\n              data = _context.sent;\n              newData = _Array$from(new _Set(data.map(function (i) {\n                return i.id;\n              }))).filter(function (i) {\n                return i;\n              }).map(function (i) {\n                return data.find(function (item) {\n                  return item.id === i;\n                });\n              });\n              setData(newData);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleSearch = function handleSearch(event) {\n    setSearch(event.target.value);\n  };\n\n  var dataFiltered = data.filter(function (item) {\n    var title = \"\".concat(item.title);\n\n    if (title.toLowerCase().includes(search.toLowerCase())) {\n      return item;\n    }\n  });\n\n  var handleLink = function handleLink(id) {\n    Router.push('/jobdetails/[id]', \"/jobdetails/\".concat(id));\n  };\n\n  var handleClickAdd = function handleClickAdd() {\n    Router.push('/add');\n  };\n\n  var _handleDelete =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(id) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return deleteData(id);\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleDelete(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var classes = props.classes;\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"div\", {\n    className: classes.bar\n  }, __jsx(\"div\", null, __jsx(AppBar, {\n    handleClickAdd: handleClickAdd,\n    setData: setData,\n    data: data,\n    handleChange: handleSearch\n  })), __jsx(\"div\", null, __jsx(\"img\", {\n    className: classes.banner,\n    src: images.banner\n  })), __jsx(Typography, {\n    className: classes.jobListBox,\n    variant: \"h5\",\n    component: \"h5\"\n  }, \"All Jobs\"), __jsx(Grid, {\n    container: true,\n    justify: \"center\"\n  }, dataFiltered.map(function (item) {\n    return __jsx(CardProduct, {\n      key: item.id,\n      title: item.title,\n      description: item.description,\n      location: item.location,\n      company: item.company,\n      handleClick: function handleClick() {\n        return handleLink(item.id);\n      },\n      handleDelete: function handleDelete() {\n        return _handleDelete(item.id);\n      }\n    });\n  })), __jsx(Footer, null)));\n}\nHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/krinawibisana/Documents/ajobthing-test/src/components/pages/Home/component.js"],"names":["React","useState","useEffect","PropTypes","CardProduct","Grid","Typography","AppBar","images","Footer","getData","deleteData","Router","Home","props","data","setData","search","setSearch","console","log","loadData","newData","map","i","id","filter","find","item","handleSearch","event","target","value","dataFiltered","title","toLowerCase","includes","handleLink","push","handleClickAdd","handleDelete","classes","root","bar","banner","jobListBox","description","location","company","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport CardProduct from '../../elements/CardProduct';\nimport { Grid, Typography } from '@material-ui/core';\nimport AppBar from '../../elements/AppBar';\nimport images from '../../../configs/images';\nimport Footer from '../../elements/Footer';\nimport { getData, deleteData } from './actions';\nimport Router from 'next/router';\n\nexport default function Home(props) {\n  const [data, setData] = useState([]);\n  const [search, setSearch] = useState('');\n  console.log(getData());\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    const data = await getData();\n\n    const newData = Array.from(new Set(data.map((i) => i.id)))\n      .filter((i) => i)\n      .map((i) => data.find((item) => item.id === i));\n\n    setData(newData);\n  };\n\n  const handleSearch = (event) => {\n    setSearch(event.target.value);\n  };\n\n  const dataFiltered = data.filter((item) => {\n    const title = `${item.title}`;\n    if (title.toLowerCase().includes(search.toLowerCase())) {\n      return item;\n    }\n  });\n\n  const handleLink = (id) => {\n    Router.push('/jobdetails/[id]', `/jobdetails/${id}`);\n  };\n\n  const handleClickAdd = () => {\n    Router.push('/add');\n  };\n\n  const handleDelete = async (id) => {\n    await deleteData(id);\n  };\n\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.bar}>\n        <div>\n          <AppBar\n            handleClickAdd={handleClickAdd}\n            setData={setData}\n            data={data}\n            handleChange={handleSearch}\n          />\n        </div>\n        <div>\n          <img className={classes.banner} src={images.banner} />\n        </div>\n        <Typography className={classes.jobListBox} variant=\"h5\" component=\"h5\">\n          All Jobs\n        </Typography>\n        <Grid container justify=\"center\">\n          {dataFiltered.map((item) => {\n            return (\n              <CardProduct\n                key={item.id}\n                title={item.title}\n                description={item.description}\n                location={item.location}\n                company={item.company}\n                handleClick={() => handleLink(item.id)}\n                handleDelete={() => handleDelete(item.id)}\n              />\n            );\n          })}\n        </Grid>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}